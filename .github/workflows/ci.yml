name: CI/CD Pipeline

# Trigger on pushes to main and on pull requests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Prevent overlapping builds on the same branch
concurrency:
  group: cicd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Job 1: Process metrics and create CSV files
  metrics:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        if [ -f "metrics_pipeline/requirements.txt" ]; then
          pip install -r metrics_pipeline/requirements.txt
        else
          echo "No requirements.txt found, using standard library only"
        fi

    - name: Run metrics aggregation
      run: |
        python metrics_pipeline/metrics_aggregate.py

    - name: Upload metrics CSV artifacts
      uses: actions/upload-artifact@v4
      with:
        name: metrics-csv
        path: metrics_pipeline/csv/
        retention-days: 7

    - name: Display metrics summary
      run: |
        echo "=== Metrics Processing Summary ==="
        if [ -f "metrics_pipeline/csv/summary_stats.csv" ]; then
          cat metrics_pipeline/csv/summary_stats.csv
        else
          echo "No summary stats found"
        fi

  # Job 2: Build React/Astro frontend (conditional on package.json)
  build-react:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for package.json
      id: check-package
      run: |
        if [ -f "package.json" ]; then
          echo "package-exists=true" >> $GITHUB_OUTPUT
          echo "Found package.json, proceeding with build"
        else
          echo "package-exists=false" >> $GITHUB_OUTPUT
          echo "No package.json found, skipping build"
        fi

    - name: Set up Node.js
      if: steps.check-package.outputs.package-exists == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies and build
      if: steps.check-package.outputs.package-exists == 'true'
      run: |
        npm install
        npm run build

    - name: Upload build artifacts
      if: steps.check-package.outputs.package-exists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

    - name: Display build summary
      if: steps.check-package.outputs.package-exists == 'true'
      run: |
        echo "=== Build Summary ==="
        echo "Build directory size:"
        du -sh dist/ || echo "No dist/ directory found"
        echo "Files created:"
        find dist/ -type f | head -10 || echo "No files in dist/"

  # Job 3: Deploy artifacts (depends on both metrics and build jobs)
  deploy:
    runs-on: ubuntu-latest
    needs: [metrics, build-react]
    # Run on main branch pushes or manual dispatch
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download metrics artifacts
      uses: actions/download-artifact@v4
      with:
        name: metrics-csv
        path: metrics_pipeline/csv/

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/
      continue-on-error: true  # Don't fail if build artifacts don't exist

    - name: List downloaded artifacts
      run: |
        echo "=== Downloaded Artifacts ==="
        echo "Metrics CSV files:"
        find metrics_pipeline/csv/ -type f || echo "No metrics CSV files found"
        echo ""
        echo "Build artifacts:"
        find dist/ -type f | head -10 || echo "No build artifacts found"

    - name: Run deployment script
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        if [ -f "scripts/deploy_to_s3.sh" ]; then
          echo "Found deploy script, executing..."
          ./scripts/deploy_to_s3.sh
        else
          echo "No deploy script found at scripts/deploy_to_s3.sh"
          echo "Deployment step completed (non-fatal)"
        fi

  # Job 4: Validation and reporting
  validate:
    runs-on: ubuntu-latest
    needs: [metrics, build-react]
    if: always()  # Run even if other jobs fail
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download metrics artifacts for validation
      uses: actions/download-artifact@v4
      with:
        name: metrics-csv
        path: metrics_pipeline/csv/
      continue-on-error: true

    - name: Validate metrics output
      run: |
        echo "=== Metrics Validation ==="
        if [ -f "metrics_pipeline/csv/summary_stats.csv" ]; then
          echo "✅ Summary stats file exists"
          echo "Records in summary:"
          wc -l metrics_pipeline/csv/summary_stats.csv
        else
          echo "❌ Summary stats file missing"
        fi
        
        echo ""
        echo "CSV files generated:"
        find metrics_pipeline/csv/ -name "*.csv" -exec basename {} \; || echo "No CSV files found"

    - name: Workflow summary
      run: |
        echo "=== Workflow Summary ==="
        echo "✅ Metrics job: ${{ needs.metrics.result }}"
        echo "✅ Build job: ${{ needs.build-react.result }}"
        echo ""
        echo "Pipeline completed at: $(date)"